name: fre
description: ''
defaultProvider: openai
organization_name: Cmsi_dbt
author_name: youcef
steps:
  - name: GBVFC
    description: BGFVGBHBF
    type: template
    templateUrl: >-
      https://github.com/YatchiYa/templates_prompts_qllm/blob/main/templates/a04a3533-19cc-4dc1-9264-162b8cfa5d12/84a72708-515b-4071-953d-7fc57bb04aa7/gbvfc.yaml
    provider: openai
    input:
      feature_name: '{{feature_name}}'
      project_key: '{{project_key}}'
      feature_overview: '{{feature_overview}}'
      feature_requirements: '{{feature_requirements}}'
      technical_requirements: '{{technical_requirements}}'
      api_endpoints: '{{api_endpoints}}'
      test_scenarios: '{{test_scenarios}}'
    output:
      feature_tickets: feature_tickets
    promptContent: |-
      # Project Feature Setup: {{feature_name}}

        This workflow will create a structured set of Jira tickets for implementing {{feature_name}}.
        The tickets will be organized under an epic and will cover different aspects of the implementation.

        ## Project Details:
        - Project Key: {{project_key}}
        - Feature Name: {{feature_name}}
        - Epic Name: {{feature_name}} Implementation

        ## Feature Overview:
        {{feature_overview}}

        ## Feature Requirements:
        {{feature_requirements}}

        ## Technical Requirements:
        {{technical_requirements}}

        ## API Endpoints:
        {{api_endpoints}}

        ## Test Scenarios:
        {{test_scenarios}}

        !! make sure to include the output feature_tickets variable in the output section, use xml tag !!!
        

      ### Always include the Output in Format in xml tags :

      <feature_tickets>
      [
          {
            "fields": {
              "projectKey": {{project_key}},
              "summary": "[Frontend] Implement {{feature_name}} UI Components",
              "description": "Implement the frontend components for {{feature_name}}.\n\nRequirements:\n{{feature_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
              "issuetype": Task,
              "storyPoints": 5,
              "labels": ["frontend", "ui"]
            }
          },
          {
            "fields": {
              "projectKey": {{project_key}},
              "summary": "[Backend] Implement {{feature_name}} Services",
              "description": "Implement the backend services for {{feature_name}}.\n\nTechnical Requirements:\n{{technical_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
              "issuetype": Task,
              "storyPoints": 5,
              "labels": ["backend", "api"]
            }
          },...]
      </feature_tickets>
  - name: EnhancedJira
    description: EnhancedJira
    type: tool
    tool: EnhancedJira
    input:
      operation: '{{createFromTemplate}}'
      templateJson: $feature_tickets
      project_key: '{{project_key}}'
      feature_name: '{{feature_name}}'
    output:
      feature_tickets: feature_tickets
