name: fre
description: fre
defaultProvider: openai
organization_name: temp
author_name: youcef
visibility: Personal
steps:
  - name: Documents Bulk Load / Retrieve [PATH]
    description: >-
      Télécharge plusieurs fichiers depuis l'espace documentaire personnel ou de
      l'organisation
    type: tool
    tool: s3ToLocal
    input:
      bucket_name: quantalogic-bucket
      keys: '{{load_files}}'
      separator: ','
    input_description:
      bucket_name: Source de données à charger
      keys: Liste des clés/chemins des fichiers à télécharger / utiliser.
      separator: Délimiteur utilisé pour séparer plusieurs clés de fichiers
    output: path_download
    output_description:
      path_download: >-
        Collection de fichiers téléchargés depuis votre workspace, sauvegardés
        localement Puis supprimés à la fin de l'execution du workflow
  - name: Code2Prompt, Document Space parser [CONTEXT]
    description: >-
      Outil Code2Prompt pour transformer le contenu d'un dossier en fichier
      Markdown unique
    type: tool
    tool: ApiServiceCallC1
    input:
      method: POST
      headers: '{"accept":"application/json", "Content-Type":"application/json"}'
      url: http://localhost:8001/api/raglite/parse_folder
      token: '-'
      data: $path_download
    input_description:
      url: URL complète pour analyser le dossier
      method: Méthode HTTP pour exécuter la requête (par exemple, POST)
      data: Chemin vers le dossier à analyser
      headers: En-têtes personnalisés pour la requête
      token: Jeton d'authentification si requis
    output: upload_response
    output_description:
      upload_response: Fichier Markdown généré contenant tout le contenu du dossier analysé
  - name: test
    description: test
    type: template
    templateUrl: >-
      https://github.com/YatchiYa/templates_prompts_qllm/blob/main/templates/33c928bb-7283-4c61-bd23-edbe4c0bfe2f/47a346a7-1605-43b3-ac03-792505c7c779/test.yaml
    provider: openai
    input:
      code_to_test: $upload_response
      code_samples: $upload_response
    input_description: {}
    output:
      test_code: test_code
    output_description: {}
    promptContent: >-
      Generate JUnit test cases for the following Java class and method. Include
      tests for valid input, invalid input, and edge cases. Use Mockito for any
      dependencies. Ensure the tests follow the Arrange-Act-Assert pattern and
      use descriptive names.


      {{code_to_test}}


      Insights from Existing Codebase:


      {{code_samples}}


      Prompt Objective:


      The primary objective of this prompt is to create a set of robust unit
      tests for the provided code. The target audience is experts in software
      testing and development.


      Notes for Effective Prompting

      Be Specific : Outline exactly what aspects of the code you want to be
      tested (valid inputs, edge cases, exception handling).


      Specify Environment : Mention any libraries or frameworks to be used (like
      JUnit for testing and Mockito for mocking).


      Encourage Best Practices : Indicate a preference for testing patterns
      (like Arrange-Act-Assert) and clear naming conventions.


      Include Context : If there are additional details about the functionality
      or dependencies that are relevant, add that context.


      ### Always include the Output in Format in xml tags :


      <test_code>

      [test code generated]

      </test_code>
