name: JIRA TEMPLATE
version: '1'
description: VFDVFD
author: youcef
input_variables:
  feature_name:
    type: string
    description: ''
  project_key:
    type: string
    description: ''
  feature_overview:
    type: string
    description: ''
  feature_requirements:
    type: string
    description: ''
  technical_requirements:
    type: string
    description: ''
  api_endpoints:
    type: string
    description: ''
  test_scenarios:
    type: string
    description: ''
output_variables:
  output1:
    type: string
    description: |2-

          {
              "projectKey": {{project_key}},
              "summary": "[Frontend] Implement {{feature_name}} UI Components",
              "description": "Implement the frontend components for {{feature_name}}.\n\nRequirements:\n{{feature_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
              "issuetype": Task,
              "storyPoints": 5,
              "labels": ["frontend", "ui"]
            
          },
          {        "projectKey": {{project_key}},
              "summary": "[Backend] Implement {{feature_name}} Services",
              "description": "Implement the backend services for {{feature_name}}.\n\nTechnical Requirements:\n{{technical_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
              "issuetype": Task,
              "storyPoints": 5,
              "labels": ["backend", "api"]
            
          },...
        
content: |-
  # Project Feature Setup: {{feature_name}}

    This workflow will create a structured set of Jira tickets for implementing {{feature_name}}.
    The tickets will be organized under an epic and will cover different aspects of the implementation.

    ## Project Details:
    - Project Key: {{project_key}}
    - Feature Name: {{feature_name}}
    - Epic Name: {{feature_name}} Implementation

    ## Feature Overview:
    {{feature_overview}}

    ## Feature Requirements:
    {{feature_requirements}}

    ## Technical Requirements:
    {{technical_requirements}}

    ## API Endpoints:
    {{api_endpoints}}

    ## Test Scenarios:
    {{test_scenarios}}

    !! make sure to include the output feature_tickets variable in the output section, use xml tag !!!
    


  ### Always include the Output in Format in xml tags :

  <output1>
  [
      {
          "projectKey": {{project_key}},
          "summary": "[Frontend] Implement {{feature_name}} UI Components",
          "description": "Implement the frontend components for {{feature_name}}.\n\nRequirements:\n{{feature_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
          "issuetype": Task,
          "storyPoints": 5,
          "labels": ["frontend", "ui"]
        
      },
      {        "projectKey": {{project_key}},
          "summary": "[Backend] Implement {{feature_name}} Services",
          "description": "Implement the backend services for {{feature_name}}.\n\nTechnical Requirements:\n{{technical_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
          "issuetype": Task,
          "storyPoints": 5,
          "labels": ["backend", "api"]
        
      },...
    ]
  </output1>
model: gpt-4o-mini
